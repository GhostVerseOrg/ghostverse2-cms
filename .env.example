# Strapi instance settings
HOST=0.0.0.0
PORT=1337
# Don't forget to change NODE_ENV to production in production environment. 
NODE_ENV=development # Make sure it's always in development mode for local stuff, same by default.

# Strapi secret keys 
APP_KEYS="toBeModified1,toBeModified2"
API_TOKEN_SALT=tobemodified
TRANSFER_TOKEN_SALT=tobemodified
ADMIN_JWT_SECRET=tobemodified
JWT_SECRET=tobemodified

# Database connection settings
DATABASE_CLIENT=postgres
DATABASE_HOST=
DATABASE_PORT=25060
DATABASE_NAME=
DATABASE_USERNAME=
DATABASE_PASSWORD=
DATABASE_SSL=true # DigitalOcean uses self signed certificate in certificate chain, so SSL must be set to -> false
DATABASE_SSL_REJECT_UNAUTHORIZED=false # For self-signed certificates

# AWS S3 compatible uploader settings, can be used with DigitalOcean Spaces storage
S3_ACCESS_KEY_ID=
S3_SECRET_ACCESS_KEY=
# NB! WORKAROUND FOR 4.16.^ VERSION BREAKING CHANGES TO STRAPI WHEN USING COMPATIBLE S3 CONFIG
S3_ENDPOINT=https://fra1.digitaloceanspaces.com # Specify like=https://fra1.digitaloceanspaces.com
S3_REGION=fra1 # always pass region here like fra1
S3_BUCKET=mvxme-strapi # always pass bucket here like mvxme-strapi
S3_ROOT_PATH=strapi-data # We can use this to be able to run multiple Strapi-s for same bucket in future like strapi-data
